{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["CONFIGS","DEFAULT_LENS","a","b","d","g","c","Mesh","lens","shape","THREE","moveTo","lineTo","Shape","extrudeSettings","depth","bevelEnabled","geometry","material","mesh","fromBufferGeometry","position","setY","App","React","useState","config","setConfig","setA","setB","setD","setG","setC","threeContainer","createRef","useEffect","console","log","threeContainerCurrent","current","scene","camera","window","innerWidth","innerHeight","renderer","logarithmicDepthBuffer","setSize","appendChild","domElement","lens2","mesh2","rotation","y","Math","PI","setZ","setX","singleGeometry","mergeMesh","singleMesh","Tee","add","color","linewidth","Wireframe","gridHelper","controls","OrbitControls","set","update","animate","requestAnimationFrame","render","removeChild","style","height","width","top","left","value","onChange","e","target","type","parseInt","ref","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca5d25c4.chunk.js","sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nconst CONFIGS = {\n    TEE: 'TEE',\n    TEE_OFFSET: 'TEE_OFFSET',\n    TEE_90: 'TEE_90'\n}\n\nconst DEFAULT_LENS = {\n    a: 4,\n    b: 4,\n    d: 2,\n    g: 1,\n    c: 2\n};\n\nfunction Shape(lens) {\n    var shape = new THREE.Shape();\n    shape.moveTo(0, 0);\n    shape.lineTo(0, -lens.a);\n    shape.lineTo(lens.b, -lens.a);\n    shape.lineTo(lens.b, (lens.d - lens.a));\n    shape.lineTo(lens.g, (lens.d - lens.a));\n    shape.lineTo(lens.g, 0);\n    shape.lineTo(0, 0);\n    return shape;\n}\n\nfunction Mesh(lens) {\n    var shape = Shape(lens);\n\n    var extrudeSettings = {\n        depth: lens.c,\n        bevelEnabled: false,\n    };\n\n    var geometry = new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n    var material = new THREE.MeshNormalMaterial();\n    var mesh = new THREE.Mesh(new THREE.Geometry().fromBufferGeometry(geometry), material);\n\n    mesh.position.setY(lens.a);\n\n    return mesh;\n}\n\nfunction Tee(lens = DEFAULT_LENS, config = CONFIGS.TEE_90) {\n\n    var mesh = Mesh(lens);\n\n    var lens2 = { ...lens };\n\n    if (config === CONFIGS.TEE_90) {\n        lens2.g = lens2.c;\n        lens2.b = lens.b + (lens.c - lens.g)\n    }\n\n    var mesh2 = Mesh(lens2);\n\n    switch(config) {\n        case CONFIGS.TEE:\n            mesh2.rotation.y = Math.PI;\n            mesh2.position.setZ(lens.c);\n            break;\n        case CONFIGS.TEE_OFFSET:\n            mesh2.rotation.y = Math.PI;\n            mesh2.position.setX(lens.g);\n            break;\n        case CONFIGS.TEE_90:\n            mesh2.rotation.y = -(Math.PI / 2);\n            break;\n        default:\n\n    }    \n\n    var singleGeometry = new THREE.Geometry();\n\n    singleGeometry.mergeMesh(mesh);\n    singleGeometry.mergeMesh(mesh2);\n\n    var singleMesh = new THREE.Mesh(singleGeometry, new THREE.MeshNormalMaterial());\n\n    return singleMesh;\n}\n\nfunction Wireframe(mesh) {\n    var geometry = new THREE.EdgesGeometry( mesh.geometry );\n\n    var material = new THREE.LineBasicMaterial( { color: 'black', linewidth: 1 } );\n\n    var wireframe = new THREE.LineSegments( geometry, material );\n\n    return wireframe;\n}\n\nfunction App() {\n\n    const [config, setConfig] = React.useState(CONFIGS.TEE);\n    const [a, setA] = React.useState(DEFAULT_LENS.a);\n    const [b, setB] = React.useState(DEFAULT_LENS.b);\n    const [d, setD] = React.useState(DEFAULT_LENS.d);\n    const [g, setG] = React.useState(DEFAULT_LENS.g);\n    const [c, setC] = React.useState(DEFAULT_LENS.c);\n\n    const threeContainer = React.createRef();\n\n    React.useEffect(() => {\n\n        console.log({ a, b, d, g, c })\n\n        const threeContainerCurrent = threeContainer.current;\n\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\n        var renderer = new THREE.WebGLRenderer({logarithmicDepthBuffer: true });\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        threeContainerCurrent.appendChild( renderer.domElement );\n        \n        var mesh = Tee({ a, b, d, g, c }, config);    \n\n        scene.add(mesh);\n        scene.add(Wireframe(mesh));\n\n        var gridHelper = new THREE.GridHelper( 20, 20 );\n        scene.add( gridHelper );\n\n        var controls = new OrbitControls( camera, renderer.domElement );\n\n        camera.position.set( 15, 10, 15 );\n        controls.update();\n\n        function animate() {\n\n            requestAnimationFrame( animate );\n\n            controls.update();\n\n            renderer.render( scene, camera );\n\n        }\n\n        animate();\n\n        return function() {\n            if (threeContainerCurrent) {\n                threeContainerCurrent.removeChild( renderer.domElement );\n            }\n        };\n\n\n    }, [threeContainer, config, a, b, d, g, c]);\n\n    return (\n        <div style={{ height: '100%', width: '100%' }}>\n            <div style={{ position: 'absolute', top: '20px', left: '20px', color: 'white' }}>\n                <div>\n                    <label>Config</label><br/>\n                    <select value={config} onChange={(e) => setConfig(e.target.value)}>\n                        <option value={CONFIGS.TEE}>{CONFIGS.TEE}</option>\n                        <option value={CONFIGS.TEE_OFFSET}>{CONFIGS.TEE_OFFSET}</option>\n                        <option value={CONFIGS.TEE_90}>{CONFIGS.TEE_90}</option>\n                    </select>\n                </div>\n                <div>\n                    <label>A</label><br/>\n                    <input \n                        type=\"number\"\n                        value={a}\n                        onChange={(e) => setA(parseInt(e.target.value))}/>\n                </div>\n                <div>\n                    <label>B</label><br/>\n                    <input \n                        type=\"number\"\n                        value={b}\n                        onChange={(e) => setB(parseInt(e.target.value))}/>\n                </div>\n                <div>\n                    <label>D</label><br/>\n                    <input \n                        type=\"number\"\n                        value={d}\n                        onChange={(e) => setD(parseInt(e.target.value))}/>\n                </div>\n                <div>\n                    <label>G</label><br/>\n                    <input \n                        type=\"number\"\n                        value={g}\n                        onChange={(e) => setG(parseInt(e.target.value))}/>\n                </div>\n                <div>\n                    <label>C</label><br/>\n                    <input \n                        type=\"number\"\n                        value={c}\n                        onChange={(e) => setC(parseInt(e.target.value))}/>\n                </div>\n            </div>\n            <div ref={threeContainer} />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}